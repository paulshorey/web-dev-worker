name = "dev"
main = "api/index.js"
usage_model = "unbound"
node_compat = true
compatibility_date = "2023-12-29"

###############################################################################

# kv_namespaces = [
#  { binding = "cache", id = "421f6e16ce7e4eeeb24d21f68e73f2d2", preview_id = "421f6e16ce7e4eeeb24d21f68e73f2d2" }
# ]
# # preview cache: dcd0f5b3e7cb49e9960c6c8909473c6e
# 
# [[d1_databases]]
# binding = "trading" # i.e. available in your Worker on env.DB
# database_name = "trading"
# database_id = "e49f9335-863f-47b1-8d60-c8bf98ab420e"

# [vars]
# DEBUG = "true"

# [triggers]
# crons = [ "* * * * *" ]

###############################################################################

# D1 DOCUMENTATION: https://developers.cloudflare.com/d1/get-started/
# D1 CLIENT API: https://developers.cloudflare.com/d1/platform/client-api/#await-stmtrun

# KV DOCUMENTATION: https://developers.cloudflare.com/kv/platform/environments/

# Variable bindings. These are arbitrary, plaintext strings (similar to environment variables)
# Note: Use secrets to store sensitive data.
# Docs: https://developers.cloudflare.com/workers/platform/environment-variables
# [vars]
# MY_VARIABLE = "production_value"

# Bind a KV Namespace. Use KV as persistent storage for small key-value pairs.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/kv
# [[kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Bind an R2 Bucket. Use R2 to store arbitrarily large blobs of data, such as files.
# Docs: https://developers.cloudflare.com/r2/api/workers/workers-api-usage/
# [[r2_buckets]]
# binding = "MY_BUCKET"
# bucket_name = "my-bucket"

# Bind a Queue producer. Use this binding to schedule an arbitrary task that may be processed later by a Queue consumer.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.producers]]
# binding = "MY_QUEUE"
# queue = "my-queue"

# Bind a Queue consumer. Queue Consumers can retrieve tasks scheduled by Producers to act on them.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.consumers]]
# queue = "my-queue"

# Bind another Worker service. Use this binding to call another Worker without network overhead.
# Docs: https://developers.cloudflare.com/workers/platform/services
# [[services]]
# binding = "MY_SERVICE"
# service = "/api/*"

# Bind a Durable Object. Durable objects are a scale-to-zero compute primitive based on the actor model.
# Durable Objects can live for as long as needed. Use these when you need a long-running "server", such as in realtime apps.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/durable-objects
# [[durable_objects.bindings]]
# name = "MY_DURABLE_OBJECT"
# class_name = "MyDurableObject"

# Durable Object migrations.
# Docs: https://developers.cloudflare.com/workers/learning/using-durable-objects#configure-durable-object-classes-with-migrations
# [[migrations]]
# tag = "v1"
# new_classes = ["MyDurableObject"]
